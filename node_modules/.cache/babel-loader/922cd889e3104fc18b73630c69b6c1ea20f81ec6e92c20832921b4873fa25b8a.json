{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  var _actorRef$system$getS, _actorRef$system;\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = (_actorRef$system$getS = (_actorRef$system = actorRef.system).getSnapshot) === null || _actorRef$system$getS === void 0 ? void 0 : _actorRef$system$getS.call(_actorRef$system);\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(_ref => {\n    let [ref, snapshot] = _ref;\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\nfunction useIdleActorRef(logic, options) {\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let observerOrListener = arguments.length > 2 ? arguments[2] : undefined;\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\nfunction useActor(logic) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector) {\n  let compare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultCompare;\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor === null || actor === void 0 ? void 0 : actor.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider(_ref2) {\n    let {\n      children,\n      logic: providedLogic = actorLogic,\n      machine,\n      options: providedOptions\n    } = _ref2;\n    if (machine) {\n      throw new Error(\"The \\\"machine\\\" prop has been deprecated. Please use \\\"logic\\\" instead.\");\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = \"ActorProvider\";\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(\"You used a hook from \\\"\".concat(Provider.displayName, \"\\\" but it's not inside a <\").concat(Provider.displayName, \"> component.\"));\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n/**\n * @alias useActor\n */\nfunction useMachine(machine) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useActor(machine, options);\n}\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };","map":{"version":3,"names":["React","useEffect","useState","useCallback","useSyncExternalStore","useIsomorphicLayoutEffect","toObserver","createActor","useSyncExternalStoreWithSelector","forEachActor","actorRef","callback","children","getSnapshot","Object","values","forEach","child","stopRootWithRehydration","_actorRef$system$getS","_actorRef$system","persistedSnapshots","ref","push","observers","Set","systemSnapshot","system","call","stop","_snapshot","_ref","snapshot","_processingStatus","useIdleActorRef","logic","options","currentConfig","setCurrent","config","newActorRef","getPersistedSnapshot","__unsafeAllowInlineActors","implementations","useActorRef","machine","arguments","length","undefined","observerOrListener","sub","subscribe","unsubscribe","start","useActor","handleStoreChange","actorSnapshot","send","defaultCompare","a","b","useSelector","actor","selector","compare","boundGetSnapshot","selectedSnapshot","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","i","prototype","hasOwnProperty","createActorContext","actorLogic","actorOptions","ReactContext","createContext","OriginalProvider","Provider","_ref2","providedLogic","providedOptions","Error","createElement","value","displayName","useContext","concat","useSelector$1","useMachine"],"sources":["C:/PoC-FE/video-fsm-dos-gitpages/node_modules/@xstate/react/dist/xstate-react.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, options) {\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, options = {}, observerOrListener) {\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction useActor(logic, options = {}) {\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n/**\n * @alias useActor\n */\nfunction useMachine(machine, options = {}) {\n  return useActor(machine, options);\n}\n\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}